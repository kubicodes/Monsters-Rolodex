{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/searchbox/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","fetchUserData","a","fetch","response","json","handleChangeOnSearchBox","e","setState","searchValue","target","value","state","this","then","result","catch","err","console","error","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+UAgBeA,G,kBAbF,SAAAC,GACX,OACE,sBAAKC,UAAU,iBAAf,UACE,qBACEC,IAAI,UACJC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BAEL,6BAAKL,EAAMI,QAAQE,OACnB,4BAAIN,EAAMI,QAAQG,aCGTC,EAVE,SAAAR,GACf,OACE,qBAAKC,UAAU,YAAf,SACGD,EAAMS,SAASC,KAAI,SAAAN,GAAO,OACzB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,UCMZM,G,MAXG,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,aAChC,OACE,uBACEZ,UAAU,SACVa,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCuCDG,E,kDA1Cb,WAAYhB,GAAQ,IAAD,8BACjB,cAAMA,IAORiB,cARmB,sBAQH,4BAAAC,EAAA,sEACSC,MAAM,8CADf,cACRC,EADQ,gBAEDA,EAASC,OAFR,mFARG,EAmBnBC,wBAA0B,SAAAC,GACxB,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SAlBtC,EAAKC,MAAQ,CACXnB,SAAU,GACVgB,YAAa,IAJE,E,gEAaE,IAAD,OAClBI,KAAKZ,gBACFa,MAAK,SAAAC,GAAM,OAAI,EAAKP,SAAS,CAAEf,SAAUsB,OACzCC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,MAAMF,Q,+BAOtB,IAAD,EAC2BJ,KAAKD,MAA/BnB,EADD,EACCA,SAAUgB,EADX,EACWA,YACZW,EAAmB3B,EAAS4B,QAAO,SAAAjC,GAAO,OAC9CA,EAAQE,KAAKgC,cAAcC,SAASd,EAAYa,kBAGlD,OACE,sBAAKrC,UAAU,MAAf,UACE,kDACA,cAAC,EAAD,CACEW,YAAY,mBACZC,aAAcgB,KAAKP,0BAErB,cAAC,EAAD,CAAUb,SAAU2B,W,GArCVI,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.be276a98.chunk.js","sourcesContent":["import React from 'react';\nimport './card.styles.css';\n\nconst Card = props => {\n  return (\n    <div className=\"card-container\">\n      <img\n        alt=\"monster\"\n        src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}\n      />\n      <h2>{props.monster.name}</h2>\n      <p>{props.monster.email}</p>\n    </div>\n  );\n};\n\nexport default Card;\n","import React from 'react';\nimport './card-list.styles.css';\nimport Card from '../card/card.component';\n\nconst CardList = props => {\n  return (\n    <div className=\"card-list\">\n      {props.monsters.map(monster => (\n        <Card key={monster.id} monster={monster} />\n      ))}\n    </div>\n  );\n};\n\nexport default CardList;\n","import React from 'react';\nimport './search-box.styles.css';\n\nconst SearchBox = ({ placeholder, handleChange }) => {\n  return (\n    <input\n      className=\"search\"\n      type=\"search\"\n      placeholder={placeholder}\n      onChange={handleChange}\n    />\n  );\n};\n\nexport default SearchBox;\n","import './App.css';\nimport { Component } from 'react';\nimport CardList from './components/card-list/card-list.component';\nimport SearchBox from './components/searchbox/search-box.component';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      monsters: [],\n      searchValue: '',\n    };\n  }\n\n  fetchUserData = async () => {\n    const response = await fetch('https://jsonplaceholder.typicode.com/users');\n    return await response.json();\n  };\n\n  componentDidMount() {\n    this.fetchUserData()\n      .then(result => this.setState({ monsters: result }))\n      .catch(err => console.error(err));\n  }\n\n  handleChangeOnSearchBox = e => {\n    this.setState({ searchValue: e.target.value });\n  };\n\n  render() {\n    const { monsters, searchValue } = this.state;\n    const filteredMonsters = monsters.filter(monster =>\n      monster.name.toLowerCase().includes(searchValue.toLowerCase())\n    );\n\n    return (\n      <div className=\"App\">\n        <h1>Monsters Rolodex</h1>\n        <SearchBox\n          placeholder=\"Search a Monster\"\n          handleChange={this.handleChangeOnSearchBox}\n        />\n        <CardList monsters={filteredMonsters} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}